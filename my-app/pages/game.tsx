import Head from "next/head";
import Link from "next/link";
import Layout from "@/components/Layout";
import ProgressBar from "@/components/ProgressBar";
import { useGame } from "@/state/GameContext";
import { motion } from "motion/react";
import React from "react";
import { UserRound, Rocket, ChartNoAxesColumnIncreasing, GraduationCap, Factory, Sprout, BookOpenText, Scale, UsersRound } from "lucide-react";
import ROLE_SITUATIONS from "@/data/roleSituations";

export default function GameHub() {
  const { choices, role, reset } = useGame();
  const answered = Object.values(choices).filter(Boolean).length;
  const percent = (answered / 6) * 100;
  const totalForRole = 6; // d√πng cho thanh ti·∫øn ƒë·ªô khi m·ªü r·ªông

  const ROLE_STORY: Record<string, { badge: string; title: string; desc: string; Icon: any } > = {
    "cong-nhan": {
      badge: "Game V·∫≠n D·ª•ng",
      title: "Nh·∫≠p Vai v√† L·ª±a Ch·ªçn",
      desc: "B·∫°n s·∫Ω ch·ªçn m·ªôt vai tr√≤ v√† b·∫°n s·∫Ω ph·∫£i ƒë∆∞a ra l·ª±a ch·ªçn c·ªßa m√¨nh v√†o c√°c t√¨nh hu·ªëng.\nM·ªói vai tr√≤ mang ƒë·∫øn g√≥c nh√¨n v√† c√°ch ti·∫øp c·∫≠n kh√°c nhau trong vi·ªác v·∫≠n d·ª•ng tri·∫øt h·ªçc M√°c-L√™nin v√†o th·ª±c t·∫ø.",
      Icon: Factory,
    },
    "sinh-vien": {
      badge: "Chuy·ªán c·ªßa ng∆∞·ªùi sinh vi√™n",
      title: "Tri th·ª©c ‚Äì Ho√†i nghi ‚Äì D·∫•n th√¢n",
      desc: "B·∫°n ƒë·ª©ng gi·ªØa √°p l·ª±c h·ªçc ph√≠, th·ª±c t·∫≠p v√† ti·∫øng n√≥i ph·∫£n bi·ªán trong khu√¥n vi√™n tr∆∞·ªùng.",
      Icon: GraduationCap,
    },
    "nong-dan": {
      badge: "Chuy·ªán c·ªßa ng∆∞·ªùi n√¥ng d√¢n",
      title: "M√πa v·ª• ‚Äì Gi√° c·∫£ ‚Äì H·ª£p t√°c",
      desc: "Bi·∫øn ƒë·ªông th·ªã tr∆∞·ªùng v√† chi ph√≠ v·∫≠t t∆∞ ƒë·∫©y b·∫°n v√†o th·∫ø kh√≥. Li·ªáu h·ª£p t√°c x√£ c√≥ l√† l·ªëi tho√°t?",
      Icon: Sprout,
    },
    "tri-thuc": {
      badge: "Chuy·ªán c·ªßa ng∆∞·ªùi tr√≠ th·ª©c",
      title: "S·ª± th·∫≠t ‚Äì Tr√°ch nhi·ªám ‚Äì C√¥ng lu·∫≠n",
      desc: "B·∫°n n·∫Øm trong tay d·ªØ li·ªáu quan tr·ªçng v·ªÅ m·ªôt b·∫•t c√¥ng x√£ h·ªôi. C√¥ng b·ªë hay gi·ªØ im l·∫∑ng?",
      Icon: BookOpenText,
    },
  };
  const story = role ? ROLE_STORY[role] : null;

  return (
    <Layout>
      <Head>
        <title>Khu v·ª±c tr√≤ ch∆°i ¬∑ M√°c ‚Äì L√™nin</title>
      </Head>

      {/* Decorative Background with parallax via data-speed */}
      <div className="pointer-events-none fixed inset-0 -z-10 overflow-hidden">
        <div data-speed="0.3" className="will-change-transform absolute -top-24 -left-24 w-80 h-80 bg-red-500/10 rounded-full blur-3xl animate-pulse"/>
        <div data-speed="0.2" className="will-change-transform absolute top-1/3 -right-24 w-[28rem] h-[28rem] bg-yellow-500/10 rounded-full blur-3xl animate-pulse delay-700"/>
        <div data-speed="0.4" className="will-change-transform absolute bottom-0 left-1/4 w-[22rem] h-[22rem] bg-blue-500/10 rounded-full blur-3xl animate-pulse delay-1000"/>
      </div>

      {/* Hero Section */}
      <motion.section 
        className="text-center mb-12 relative"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
        <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-blue-50 border border-blue-200 mb-6 shadow-sm">
          {story ? (
            <span className="inline-flex items-center gap-2">
              {story.Icon ? React.createElement(story.Icon, { className: "w-4 h-4 text-blue-700" }) : null}
              <span className="text-sm font-medium text-blue-700">{story.badge}</span>
            </span>
          ) : (
            <span className="inline-flex items-center gap-2">
              <UsersRound className="w-4 h-4 text-blue-700"/>
              <span className="text-sm font-medium text-blue-700">Khu v·ª±c h·ªçc t·∫≠p t∆∞∆°ng t√°c</span>
            </span>
          )}
        </div>
        <div className="absolute left-1/2 -translate-x-1/2 -top-2 w-40 h-40 bg-white/5 rounded-full blur-2xl"/>
        
        <h1 className="text-4xl md:text-5xl font-bold mb-4 text-slate-900">
          {story ? story.title : "Khu v·ª±c tr√≤ ch∆°i"}
        </h1>
        
        <p className="text-lg text-slate-700 max-w-3xl mx-auto leading-relaxed whitespace-pre-line">
          {story ? story.desc : (
            "H√†nh tr√¨nh kh√°m ph√° tri·∫øt h·ªçc M√°c-L√™nin qua c√°c t√¨nh hu·ªëng th·ª±c t·∫ø. Ch·ªçn vai, ƒë∆∞a ra quy·∫øt ƒë·ªãnh v√† h·ªçc h·ªèi t·ª´ tr·∫£i nghi·ªám t∆∞∆°ng t√°c."
          )}
        </p>
      </motion.section>

      {/* Progress Section */}
      <motion.section 
        className="mb-12"
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5, delay: 0.2 }}
      >
        <div className="relative overflow-hidden bg-white rounded-2xl p-6 border border-slate-200 shadow-sm">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold text-slate-900">Ti·∫øn ƒë·ªô h·ªçc t·∫≠p</h2>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 bg-emerald-500 rounded-full animate-pulse"></div>
              <span className="text-sm text-slate-600">{answered}/6 ho√†n th√†nh</span>
            </div>
          </div>
          
          <div className="max-w-full mb-3">
            <ProgressBar percent={percent} />
          </div>
          
          <div className="flex items-center justify-between text-sm">
            <span className="text-slate-600">
              {percent === 0 && "B·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p"}
              {percent > 0 && percent < 100 && "ƒêang ti·∫øn b·ªô t·ªët!"}
              {percent === 100 && "Ho√†n th√†nh xu·∫•t s·∫Øc! üéâ"}
            </span>
            <span className="text-yellow-600 font-medium">{Math.round(percent)}%</span>
          </div>
        </div>
      </motion.section>

      {/* Continue or Restart Options */}
      {answered > 0 && (
        <motion.section 
          className="mb-8"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, delay: 0.3 }}
        >
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200">
            <h3 className="text-lg font-semibold text-slate-900 mb-4 text-center">
              B·∫°n ƒë√£ c√≥ ti·∫øn tr√¨nh h·ªçc t·∫≠p
            </h3>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link href={`/s/${answered + 1}`}>
                <motion.button 
                  className="px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-400 hover:to-teal-400 text-white rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  üîÑ Ti·∫øp t·ª•c h·ªçc t·∫≠p
                </motion.button>
              </Link>
              <motion.button 
                onClick={reset}
                className="px-6 py-3 bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-400 hover:to-red-400 text-white rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                üÜï L√†m l·∫°i t·ª´ ƒë·∫ßu
              </motion.button>
            </div>
          </div>
        </motion.section>
      )}

      {/* Action Buttons */}
      <motion.section 
        className="mb-12"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.4 }}
      >
        <div className="grid md:grid-cols-3 gap-4">
          <Link href="/role">
            <motion.div 
              className="group relative p-6 bg-white rounded-2xl border border-slate-200 hover:border-slate-300 transition-all duration-300 cursor-pointer overflow-hidden shadow-sm"
              whileHover={{ y: -6, scale: 1.03 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <div className="relative z-10">
                <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl flex items-center justify-center mb-4 shadow-lg text-white">
                  <UserRound className="w-6 h-6"/>
                </div>
                <h3 className="font-semibold text-slate-900 mb-2">Ch·ªçn vai tr√≤</h3>
                <p className="text-sm text-slate-600">C√¥ng nh√¢n, sinh vi√™n, n√¥ng d√¢n, hay tr√≠ th·ª©c?</p>
              </div>
            </motion.div>
          </Link>

          <Link href="/role">
            <motion.div 
              className="group relative p-6 bg-white rounded-2xl border border-slate-200 hover:border-slate-300 transition-all duration-300 cursor-pointer overflow-hidden shadow-sm"
              whileHover={{ y: -6, scale: 1.03 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-green-50 to-blue-50 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <div className="relative z-10">
                <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-blue-500 rounded-xl flex items-center justify-center mb-4 shadow-lg text-white">
                  <Rocket className="w-6 h-6"/>
                </div>
                <h3 className="font-semibold text-slate-900 mb-2">B·∫Øt ƒë·∫ßu h·ªçc</h3>
                <p className="text-sm text-slate-600">Ch·ªçn vai tr√≤ ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p</p>
              </div>
            </motion.div>
          </Link>

          <Link href="/role">
            <motion.div 
              className="group relative p-6 bg-white rounded-2xl border border-slate-200 hover:border-slate-300 transition-all duration-300 cursor-pointer overflow-hidden shadow-sm"
              whileHover={{ y: -6, scale: 1.03 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-yellow-50 to-red-50 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <div className="relative z-10">
                <div className="w-12 h-12 bg-gradient-to-br from-yellow-500 to-red-500 rounded-xl flex items-center justify-center mb-4 shadow-lg text-white">
                  <ChartNoAxesColumnIncreasing className="w-6 h-6"/>
                </div>
                <h3 className="font-semibold text-slate-900 mb-2">Xem k·∫øt qu·∫£</h3>
                <p className="text-sm text-slate-600">Ch·ªçn vai tr√≤ ƒë·ªÉ xem k·∫øt qu·∫£ h·ªçc t·∫≠p</p>
              </div>
            </motion.div>
          </Link>
        </div>
      </motion.section>

      {/* How it Works */}
      <motion.section 
        className="mb-8"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.6 }}
      >
        <div className="text-center mb-8">
          <h2 className="text-2xl font-bold text-slate-900 mb-3">C√°ch th·ª©c ho·∫°t ƒë·ªông</h2>
          <p className="text-slate-600">Ba b∆∞·ªõc ƒë∆°n gi·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p</p>
        </div>

        <div className="grid md:grid-cols-3 gap-6">
          {[
            {
              step: "01",
              title: "Ch·ªçn vai tr√≤",
              desc: "L·ª±a ch·ªçn nh√¢n v·∫≠t ph√π h·ª£p: c√¥ng nh√¢n, sinh vi√™n, n√¥ng d√¢n, hay tr√≠ th·ª©c. Vai tr√≤ n√†y s·∫Ω ·∫£nh h∆∞·ªüng ƒë·∫øn c√°ch ti·∫øp c·∫≠n c√°c t√¨nh hu·ªëng.",
              icon: "üé≠",
              color: "from-red-500 to-pink-500"
            },
            {
              step: "02", 
              title: "Ra quy·∫øt ƒë·ªãnh",
              desc: "ƒê·ªëi m·∫∑t v·ªõi c√°c t√¨nh hu·ªëng th·ª±c t·∫ø, l·ª±a ch·ªçn gi·ªØa 'ƒë·∫•u tranh' ho·∫∑c 'im l·∫∑ng'. M·ªói quy·∫øt ƒë·ªãnh ƒë·ªÅu c√≥ √Ω nghƒ©a gi√°o d·ª•c s√¢u s·∫Øc.",
              icon: "‚öñÔ∏è",
              color: "from-blue-500 to-cyan-500"
            },
            {
              step: "03",
              title: "H·ªçc h·ªèi & T·ªïng k·∫øt", 
              desc: "Nh·∫≠n ph·∫£n h·ªìi t·ª©c th·ªùi v√† kh√°m ph√° ki·∫øn th·ª©c tri·∫øt h·ªçc M√°c-L√™nin qua ph√¢n t√≠ch k·∫øt qu·∫£ t·ªïng h·ª£p.",
              icon: "üìö",
              color: "from-green-500 to-emerald-500"
            }
          ].map((item, index) => (
            <motion.div 
              key={item.step}
              className="relative group"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 0.8 + index * 0.1 }}
            >
              {/* Connection line */}
              {index < 2 && (
                <div className="hidden md:block absolute top-12 left-full w-6 h-0.5 bg-gradient-to-r from-white/30 to-transparent z-10"></div>
              )}
              
              <div className="relative p-6 bg-white rounded-2xl border border-slate-200 hover:border-slate-300 transition-all duration-300 group-hover:shadow-sm">
                <div className="flex items-center mb-4">
                  <div className={`w-8 h-8 bg-gradient-to-r ${item.color} rounded-full flex items-center justify-center text-white text-xs font-bold mr-3`}>
                    {item.step}
                  </div>
                  <span className="text-2xl">
                    {index === 0 && <UsersRound className="w-6 h-6"/>}
                    {index === 1 && <Scale className="w-6 h-6"/>}
                    {index === 2 && <BookOpenText className="w-6 h-6"/>}
                  </span>
                </div>
                
                <h3 className="font-semibold text-slate-900 mb-3 text-lg">{item.title}</h3>
                <p className="text-sm text-slate-600 leading-relaxed">{item.desc}</p>
                
                {/* Hover effect */}
                <div className="absolute inset-0 bg-gradient-to-br from-white to-transparent rounded-2xl opacity-0 group-hover:opacity-20 transition-opacity duration-300"></div>
              </div>
            </motion.div>
          ))}
        </div>
      </motion.section>

    </Layout>
  );
}